{"ast":null,"code":"var _jsxFileName = \"/home/mah-nigga/React/ChatApp/client/src/context/streams/StreamState.js\";\nimport React, { useReducer, useContext } from 'react';\nimport StreamReducer from './StreamReducer';\nimport StreamContext from './StreamContext';\nimport setAuthToken from '../../utils/setAuthToken';\nimport AuthContext from '../auth/AuthContext';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { CREATE_STREAM, JOIN_STREAM, GET_STREAM, SEND_MESSAGE, CHOOSE_STREAM, DELETE_STREAM, UPDATE_STREAM } from '../types';\nconst socket = io('http://localhost:5000');\n\nconst StreamState = props => {\n  const initialState = {\n    current: null,\n    streams: [],\n    currentMessage: null,\n    loading: null\n  };\n  const [state, dispatch] = useReducer(StreamReducer, initialState);\n  const authContext = useContext(AuthContext);\n  const {\n    user\n  } = authContext;\n  socket.on('new message', data => {\n    // console.log(data)\n    renderMessages(data);\n  });\n\n  const renderMessages = data => {\n    dispatch({\n      type: 'RENDER_MESSAGES',\n      payload: data\n    });\n  };\n\n  const getStream = async () => {\n    if (user) {\n      loading = true;\n      const res = await axios.get(`http://localhost:5000/streams/${user._id}`);\n      dispatch({\n        type: GET_STREAM,\n        payload: res.data\n      });\n    }\n  };\n\n  const selectStream = stream => {\n    dispatch({\n      type: CHOOSE_STREAM,\n      payload: stream\n    });\n  };\n\n  const sendMessage = async formData => {\n    if (user) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      formData.sender_id = user._id;\n      formData.sender_name = user.name;\n      console.log(formData);\n      await axios.post('http://localhost:5000/streams/send', formData, config);\n      dispatch({\n        type: SEND_MESSAGE,\n        payload: formData\n      });\n    }\n  };\n\n  const createStream = async title => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    if (user) {\n      const formData = {\n        title: title.title,\n        owner_id: user._id,\n        owner_name: user.name\n      };\n      const res = await axios.post('http://localhost:5000/streams/create', formData, config);\n      dispatch({\n        type: CREATE_STREAM,\n        payload: formData\n      });\n    }\n  };\n\n  const deleteStream = formData => {\n    dispatch({\n      type: DELETE_STREAM,\n      payload: formData\n    });\n  };\n\n  const updateStream = formData => {\n    dispatch({\n      type: UPDATE_STREAM,\n      payload: formData\n    });\n  };\n\n  const joinStream = async link => {\n    const url = `http://localhost:5000/streams/join/${link}/${user._id}`;\n    const res = await axios.get(url);\n    console.log(res.data.newStream);\n    dispatch({\n      type: JOIN_STREAM,\n      payload: res.data.newStream\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StreamContext.Provider, {\n    value: {\n      streams: state.streams,\n      messages: state.messages,\n      current: state.current,\n      currentMessage: state.currentMessage,\n      loading: state.loading,\n      getStream,\n      sendMessage,\n      selectStream,\n      createStream,\n      deleteStream,\n      updateStream,\n      joinStream\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default StreamState; // { _id:\n//     {\n//        _data:\n//       '825EF6D4C7000000022B022C0100296E5A1004CA7A3AFA58AE47DB892DD7E6C4E65B2046645F696400645EF4C261B6054E32AB4DE74D0004'\n//     },\n//      operationType: 'update',\n//      clusterTime: Timestamp { _bsontype: 'Timestamp', low_: 2, high_: 1593234631 },\n//      ns: { \n//        db: 'NiggaByte', \n//        coll: 'streams' \n//       },\n//      documentKey: { \n//        _id: 5ef4c261b6054e32ab4de74d \n//     },\n//      updateDescription: { \n//         updatedFields: { 'messages.13': [Object] },\n//         removedFields: [] \n//       } \n// }","map":{"version":3,"sources":["/home/mah-nigga/React/ChatApp/client/src/context/streams/StreamState.js"],"names":["React","useReducer","useContext","StreamReducer","StreamContext","setAuthToken","AuthContext","axios","io","CREATE_STREAM","JOIN_STREAM","GET_STREAM","SEND_MESSAGE","CHOOSE_STREAM","DELETE_STREAM","UPDATE_STREAM","socket","StreamState","props","initialState","current","streams","currentMessage","loading","state","dispatch","authContext","user","on","data","renderMessages","type","payload","getStream","res","get","_id","selectStream","stream","sendMessage","formData","config","headers","sender_id","sender_name","name","console","log","post","createStream","title","owner_id","owner_name","deleteStream","updateStream","joinStream","link","url","newStream","messages","children"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext } from 'react'\nimport StreamReducer from './StreamReducer'\nimport StreamContext from './StreamContext'\nimport setAuthToken from '../../utils/setAuthToken'\nimport AuthContext from '../auth/AuthContext'\n\nimport axios from 'axios'\nimport io from 'socket.io-client'\n\nimport {\n  CREATE_STREAM,\n  JOIN_STREAM,\n  GET_STREAM,\n  SEND_MESSAGE,\n  CHOOSE_STREAM,\n  DELETE_STREAM,\n  UPDATE_STREAM\n} from '../types'\n\nconst socket = io('http://localhost:5000')\n\nconst StreamState = props => {\n  const initialState = {\n    current: null,\n    streams: [],\n    currentMessage: null,\n    loading: null\n  }\n\n  const [state, dispatch] = useReducer(StreamReducer, initialState)\n\n  const authContext = useContext(AuthContext)\n  const { user } = authContext\n\n  socket.on('new message', data => {\n    // console.log(data)\n    renderMessages(data)\n  })\n\n  const renderMessages = data => {\n    dispatch({\n      type: 'RENDER_MESSAGES',\n      payload: data\n    })\n  }\n\n  const getStream = async () => {\n    if (user) {\n      loading = true\n      const res = await axios.get(`http://localhost:5000/streams/${user._id}`)\n      dispatch({\n        type: GET_STREAM,\n        payload: res.data\n      })\n    }\n  }\n\n  const selectStream = stream => {\n    dispatch({\n      type: CHOOSE_STREAM,\n      payload: stream\n    })\n  }\n\n  const sendMessage = async formData => {\n    if (user) {\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n\n      formData.sender_id = user._id\n      formData.sender_name = user.name\n      console.log(formData)\n\n      await axios.post('http://localhost:5000/streams/send', formData, config)\n\n      dispatch({\n        type: SEND_MESSAGE,\n        payload: formData\n      })\n    }\n  }\n\n  const createStream = async title => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    if (user) {\n      const formData = {\n        title: title.title,\n        owner_id: user._id,\n        owner_name: user.name\n      }\n      const res = await axios.post('http://localhost:5000/streams/create', formData, config)\n      dispatch({\n        type: CREATE_STREAM,\n        payload: formData\n      })\n    }\n  }\n\n  const deleteStream = formData => {\n    dispatch({\n      type: DELETE_STREAM,\n      payload: formData\n    })\n  }\n\n  const updateStream = formData => {\n    dispatch({\n      type: UPDATE_STREAM,\n      payload: formData\n    })\n  }\n\n  const joinStream = async link => {\n    const url = `http://localhost:5000/streams/join/${link}/${user._id}`\n    const res = await axios.get(url)\n    console.log(res.data.newStream)\n    dispatch({\n      type: JOIN_STREAM,\n      payload: res.data.newStream\n    })\n  }\n\n  return (\n    <StreamContext.Provider \n      value={{\n        streams: state.streams,\n        messages: state.messages,\n        current: state.current,\n        currentMessage: state.currentMessage,\n        loading: state.loading,\n        getStream,\n        sendMessage,\n        selectStream,\n        createStream,\n        deleteStream,\n        updateStream,\n        joinStream\n      }}\n    >\n      { props.children }\n    </StreamContext.Provider>\n  )\n}\n\nexport default StreamState\n\n\n// { _id:\n//     {\n//        _data:\n//       '825EF6D4C7000000022B022C0100296E5A1004CA7A3AFA58AE47DB892DD7E6C4E65B2046645F696400645EF4C261B6054E32AB4DE74D0004'\n//     },\n//      operationType: 'update',\n//      clusterTime: Timestamp { _bsontype: 'Timestamp', low_: 2, high_: 1593234631 },\n//      ns: { \n//        db: 'NiggaByte', \n//        coll: 'streams' \n//       },\n//      documentKey: { \n//        _id: 5ef4c261b6054e32ab4de74d \n//     },\n//      updateDescription: { \n//         updatedFields: { 'messages.13': [Object] },\n//         removedFields: [] \n//       } \n// }"]},"metadata":{},"sourceType":"module"}