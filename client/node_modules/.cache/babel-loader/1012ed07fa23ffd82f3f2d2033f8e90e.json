{"ast":null,"code":"var _jsxFileName = \"/home/mah-nigga/React/ChatApp/client/src/components/pages/Chatbox.js\";\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport StreamContext from '../../context/streams/StreamContext';\nimport AuthContext from '../../context/auth/AuthContext';\n\nconst ChatBox = props => {\n  const {\n    messages\n  } = props;\n  const streamContext = useContext(StreamContext);\n  const {\n    sendMessage,\n    current,\n    updateStream,\n    currentMessage,\n    resetCurrent\n  } = streamContext;\n  const authContext = useContext(AuthContext);\n  const {\n    user,\n    getUser\n  } = authContext;\n  const [msg, setMsg] = useState('');\n  const msgRef = useRef();\n\n  const onSend = e => {\n    const obj = {\n      formData: {\n        stream_id: current._id,\n        text: msg,\n        category: 'text'\n      },\n      current\n    };\n    sendMessage(obj);\n    setMsg('');\n  };\n\n  const handleInput = e => {\n    setMsg(e.target.value);\n  };\n\n  const [title, setTitle] = useState('');\n\n  const titleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(current);\n\n    if (!current) {\n      const cs = JSON.parse(localStorage.getItem('current'));\n      console.log('cs', cs);\n      resetCurrent(cs);\n    } else {\n      setTitle(current.title);\n      console.log(title);\n      const cs = JSON.stringify(current);\n      localStorage.setItem('current', cs);\n    }\n\n    getUser();\n  }, []);\n\n  const onSubmit = e => {\n    console.log(title);\n    const formData = {\n      id: 997,\n      title\n    };\n    updateStream(formData);\n  };\n\n  const openVideoChat = e => {\n    sendMessage({\n      stream_id: current._id,\n      text: 'Video chat started',\n      category: 'video'\n    });\n    setMsg('');\n  };\n\n  const copyLink = e => {\n    navigator.clipboard.writeText(current._id);\n    M.toast({\n      html: 'Link copied'\n    });\n  };\n\n  const joinVideoChat = e => {\n    window.open(`https://media.monerdaktar.com/${current._id}`);\n  };\n\n  if (!current) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Select a stream\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"above-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://robohash.org/${current._id}?set=set4`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"modal-trigger\",\n    href: \"#update-stream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 62\n    }\n  }, title)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"small material-icons\",\n    style: {\n      cursor: 'pointer',\n      color: 'gray'\n    },\n    onClick: openVideoChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"switch_video\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"small material-icons\",\n    style: {\n      cursor: 'pointer',\n      color: 'gray'\n    },\n    onClick: copyLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"add_circle_outline\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    id: \"messages\",\n    ref: msgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, currentMessage.map(message => message.sender_id == user._id ? message.category === 'text' ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bubble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 34\n    }\n  }, message.text)) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bubble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: joinVideoChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 59\n    }\n  }, \"Join\"))) : message.category === 'text' ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bubble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 31\n    }\n  }, message.text)) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bubble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: joinVideoChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 56\n    }\n  }, \"Join\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"type-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"msg\",\n    value: msg,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"material-icons right\",\n    onClick: onSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }\n  }, \"send\"))));\n};\n\nexport default ChatBox;","map":{"version":3,"sources":["/home/mah-nigga/React/ChatApp/client/src/components/pages/Chatbox.js"],"names":["React","useContext","useState","useEffect","useRef","M","StreamContext","AuthContext","ChatBox","props","messages","streamContext","sendMessage","current","updateStream","currentMessage","resetCurrent","authContext","user","getUser","msg","setMsg","msgRef","onSend","e","obj","formData","stream_id","_id","text","category","handleInput","target","value","title","setTitle","titleChange","console","log","cs","JSON","parse","localStorage","getItem","stringify","setItem","onSubmit","id","openVideoChat","copyLink","navigator","clipboard","writeText","toast","html","joinVideoChat","window","open","display","cursor","color","map","message","sender_id"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react'\nimport M from 'materialize-css/dist/js/materialize.min.js'\n\nimport StreamContext from '../../context/streams/StreamContext'\nimport AuthContext from '../../context/auth/AuthContext'\n\nconst ChatBox = (props) => {\n  const { messages } = props\n\n  const streamContext = useContext(StreamContext)\n  const { sendMessage, current, updateStream, currentMessage, resetCurrent } = streamContext\n  const authContext = useContext(AuthContext)\n  const { user, getUser } = authContext\n\n  const [msg, setMsg] = useState('')\n  const msgRef = useRef()\n\n  const onSend = (e) => {\n    const obj = {\n      formData: {\n        stream_id: current._id,\n        text: msg,\n        category: 'text'\n      },\n      current\n    } \n    sendMessage(obj)\n    setMsg('')\n  }\n\n  const handleInput = (e) => {\n    setMsg(e.target.value)\n  }\n\n  const [title, setTitle] = useState('')\n  const titleChange = e => {\n    setTitle(e.target.value)\n  }\n\n  useEffect(() => {\n    console.log(current)\n    if (!current) {\n      const cs = JSON.parse(localStorage.getItem('current'))\n      console.log('cs', cs)\n      resetCurrent(cs)\n    } else {\n      setTitle(current.title)\n      console.log(title)\n      const cs = JSON.stringify(current)\n      localStorage.setItem('current', cs)\n    }\n    getUser()\n  }, [])\n\n  const onSubmit = e => {\n    console.log(title)\n    const formData = {\n      id: 997,\n      title\n    }\n    updateStream(formData)\n  }\n\n  const openVideoChat = e => {\n    sendMessage({\n      stream_id: current._id,\n      text: 'Video chat started',\n      category: 'video'\n    })\n    setMsg('')\n  }\n\n  const copyLink = e => {\n    navigator.clipboard.writeText( current._id )\n    M.toast({ html: 'Link copied' })\n  }\n\n  const joinVideoChat = e => {\n    window.open(`https://media.monerdaktar.com/${current._id}`)\n  }\n\n  if (!current) {\n    return (<p>Select a stream</p>)\n  }\n  return (\n    <div className='chatbox'>\n      <div className='above-messages'>\n        <div className='left'>\n          <div className='image'>\n            <img src={`https://robohash.org/${current._id}?set=set4`} />\n          </div>\n          <div className='title'>\n          <a className='modal-trigger' href='#update-stream'><h5>{title}</h5></a>  \n          </div>\n        </div>\n        <div className='right' style={{display: 'flex'}}>\n            <i className='small material-icons' style={{cursor: 'pointer', color: 'gray'}} onClick={openVideoChat}>switch_video</i>\n            <i className='small material-icons' style={{cursor: 'pointer', color: 'gray'}} onClick={copyLink}>add_circle_outline</i>\n        </div>\n      </div>\n      <div className='messages' id='messages' ref={msgRef}>\n        {\n          currentMessage.map(message => ( message.sender_id == user._id ? (message.category === 'text' ? (\n            <p className='Green'><span className='bubble'>{ message.text }</span></p>\n          ) : (\n            <p className='Green'><span className='bubble'><button onClick={joinVideoChat}>Join</button></span></p>\n          ) ) : \n        (message.category === 'text' ? (\n          <p className='Gray'><span className='bubble'>{ message.text }</span></p>\n        ) : (\n          <p className='Gray'><span className='bubble'><button onClick={joinVideoChat}>Join</button></span></p>\n        ) )))\n        }\n      </div>\n      <div className='type-area'>\n        <textarea name='msg' value={msg} onChange={handleInput}></textarea>\n        <p><i class=\"material-icons right\" onClick={onSend}>send</i></p>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatBox\n"]},"metadata":{},"sourceType":"module"}