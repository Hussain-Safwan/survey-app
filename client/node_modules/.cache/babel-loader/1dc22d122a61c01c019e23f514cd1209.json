{"ast":null,"code":"var _jsxFileName = \"/home/mah-nigga/React/ChatApp/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport axios from 'axios';\nimport { LOGIN, REGISTER } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    user: null,\n    isAuth: false\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post('http://localhost:5000/auth/login', formData, {\n      withCredentials: true\n    }, config);\n    console.log(res.data);\n    dispatch({\n      type: LOGIN,\n      payload: formData\n    });\n  };\n\n  const register = async formData => {\n    console.log('state', formData);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post('http://localhost:5000/auth/register', formData, config);\n    console.log(res.data);\n    dispatch({\n      type: REGISTER,\n      payload: formData\n    });\n  };\n\n  const getUser = async () => {\n    const res = await axios.get('http://localhost:5000/auth/getUser');\n\n    if (res.data.status) {\n      dispatch({\n        type: 'SET_USER',\n        payload: res.data.user\n      });\n    } else {\n      dispatch({\n        type: 'ERROR_USER'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isAuth: state.isAuth,\n      user: state.user,\n      login,\n      register,\n      getUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/mah-nigga/React/ChatApp/client/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","axios","LOGIN","REGISTER","AuthState","props","initialState","user","isAuth","state","dispatch","login","formData","config","headers","res","post","withCredentials","console","log","data","type","payload","register","getUser","get","status","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,KADF,EAEEC,QAFF,QAGO,UAHP;;AAKA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,IADa;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAArB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACE,WAAD,EAAcM,YAAd,CAApC;;AAEA,QAAMK,KAAK,GAAG,MAAMC,QAAN,IAAkB;AAC9B,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,kCAAX,EAA+CJ,QAA/C,EAAyD;AAAEK,MAAAA,eAAe,EAAE;AAAnB,KAAzD,EAAoFJ,MAApF,CAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AACAV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEnB,KADC;AAEPoB,MAAAA,OAAO,EAAEV;AAFF,KAAD,CAAR;AAID,GAZD;;AAcA,QAAMW,QAAQ,GAAG,MAAMX,QAAN,IAAkB;AACjCM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,QAArB;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,qCAAX,EAAkDJ,QAAlD,EAA4DC,MAA5D,CAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AACAV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAElB,QADC;AAEPmB,MAAAA,OAAO,EAAEV;AAFF,KAAD,CAAR;AAID,GAbD;;AAeA,QAAMY,OAAO,GAAG,YAAY;AAC1B,UAAMT,GAAG,GAAG,MAAMd,KAAK,CAACwB,GAAN,CAAU,oCAAV,CAAlB;;AACA,QAAIV,GAAG,CAACK,IAAJ,CAASM,MAAb,EAAqB;AACnBhB,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,OAAO,EAAEP,GAAG,CAACK,IAAJ,CAASb;AAFX,OAAD,CAAR;AAID,KALD,MAKO;AACLG,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD;AACF,GAZD;;AAcA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLb,MAAAA,MAAM,EAAEC,KAAK,CAACD,MADT;AAELD,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAFP;AAGLI,MAAAA,KAHK;AAILY,MAAAA,QAJK;AAKLC,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASInB,KAAK,CAACsB,QATV,CADF;AAaD,CAhED;;AAkEA,eAAevB,SAAf","sourcesContent":["import React, { useReducer } from 'react'\nimport AuthContext from './AuthContext'\nimport AuthReducer from './AuthReducer'\n\nimport axios from 'axios'\n\nimport {\n  LOGIN,\n  REGISTER\n} from '../types'\n\nconst AuthState = props => {\n  const initialState = {\n    user: null,\n    isAuth: false\n  }\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState)\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    const res = await axios.post('http://localhost:5000/auth/login', formData, { withCredentials: true }, config)\n    console.log(res.data)\n    dispatch({\n      type: LOGIN,\n      payload: formData\n    })\n  }\n\n  const register = async formData => {\n    console.log('state', formData)\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    }\n    const res = await axios.post('http://localhost:5000/auth/register', formData, config)\n    console.log(res.data)\n    dispatch({\n      type: REGISTER,\n      payload: formData\n    })\n  }\n\n  const getUser = async () => {\n    const res = await axios.get('http://localhost:5000/auth/getUser')\n    if (res.data.status) {\n      dispatch({\n        type: 'SET_USER',\n        payload: res.data.user\n      })\n    } else {\n      dispatch({\n        type: 'ERROR_USER'\n      })\n    }\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuth: state.isAuth,\n        user: state.user,\n        login,\n        register,\n        getUser\n      }}\n    >\n      { props.children }\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthState\n"]},"metadata":{},"sourceType":"module"}