{"ast":null,"code":"var _jsxFileName = \"/home/mah-nigga/React/ChatApp/client/src/context/streams/StreamState.js\";\nimport React, { useReducer } from 'react';\nimport StreamReducer from './StreamReducer';\nimport StreamContext from './StreamContext';\nimport { CREATE_STREAM, JOIN_STREAM, GET_STREAM, SEND_MESSAGE, CHOOSE_STREAM } from '../types';\n\nconst StreamState = props => {\n  const initialState = {\n    current: null,\n    streams: [{\n      id: 1,\n      title: 'With the buddiez'\n    }, {\n      id: 2,\n      title: 'Ma home Bois'\n    }, {\n      id: 3,\n      title: 'Univ NiggaZ'\n    }, {\n      id: 4,\n      title: 'bad shitty creepZ'\n    }],\n    messages: [{\n      id: 1,\n      sender: 'other',\n      text: 'hey there buddz'\n    }, {\n      id: 2,\n      sender: 'me',\n      text: 'brooh, been where??'\n    }, {\n      id: 3,\n      sender: 'other',\n      text: 'lundun bro'\n    }, {\n      id: 4,\n      sender: 'me',\n      text: 'welcome back, buddz'\n    }]\n  };\n  const [state, dispatch] = useReducer(StreamReducer, initialState);\n\n  const getStream = () => {\n    dispatch({\n      type: GET_STREAM\n    });\n  };\n\n  const selectStream = stream => {\n    dispatch({\n      type: CHOOSE_STREAM,\n      payload: stream\n    });\n  };\n\n  const sendMessage = formData => {\n    dispatch({\n      type: SEND_MESSAGE,\n      payload: formData\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StreamContext.Provider, {\n    value: {\n      streams: state.streams,\n      messages: state.messages,\n      getStream,\n      sendMessage,\n      selectStream\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default StreamState;","map":{"version":3,"sources":["/home/mah-nigga/React/ChatApp/client/src/context/streams/StreamState.js"],"names":["React","useReducer","StreamReducer","StreamContext","CREATE_STREAM","JOIN_STREAM","GET_STREAM","SEND_MESSAGE","CHOOSE_STREAM","StreamState","props","initialState","current","streams","id","title","messages","sender","text","state","dispatch","getStream","type","selectStream","stream","payload","sendMessage","formData","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,aALF,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,IADU;AAEnBC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACED,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE;AAFT,KALO,EASP;AACED,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE;AAFT,KATO,EAaP;AACED,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAbO,CAFU;AAoBnBC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEG,MAAAA,MAAM,EAAE,OAFV;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADQ,EAMR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEG,MAAAA,MAAM,EAAE,IAFV;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANQ,EAWR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEG,MAAAA,MAAM,EAAE,OAFV;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXQ,EAgBR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEG,MAAAA,MAAM,EAAE,IAFV;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBQ;AApBS,GAArB;AA4CA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,UAAU,CAACC,aAAD,EAAgBS,YAAhB,CAApC;;AAEA,QAAMU,SAAS,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAMiB,YAAY,GAAGC,MAAM,IAAI;AAC7BJ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEd,aADC;AAEPiB,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAME,WAAW,GAAGC,QAAQ,IAAI;AAC9BP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,YADC;AAEPkB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLd,MAAAA,OAAO,EAAEM,KAAK,CAACN,OADV;AAELG,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAFX;AAGLK,MAAAA,SAHK;AAILK,MAAAA,WAJK;AAKLH,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASIb,KAAK,CAACkB,QATV,CADF;AAaD,CAhFD;;AAkFA,eAAenB,WAAf","sourcesContent":["import React, { useReducer } from 'react'\nimport StreamReducer from './StreamReducer'\nimport StreamContext from './StreamContext'\nimport {\n  CREATE_STREAM,\n  JOIN_STREAM,\n  GET_STREAM,\n  SEND_MESSAGE,\n  CHOOSE_STREAM\n} from '../types'\n\nconst StreamState = props => {\n  const initialState = {\n    current: null,\n    streams: [\n      {\n        id: 1,\n        title: 'With the buddiez'\n      },\n      {\n        id: 2,\n        title: 'Ma home Bois'\n      },\n      {\n        id: 3,\n        title: 'Univ NiggaZ'\n      },\n      {\n        id: 4,\n        title: 'bad shitty creepZ'\n      }\n    ],\n    messages: [\n      {\n        id: 1,\n        sender: 'other',\n        text: 'hey there buddz'\n      },\n      {\n        id: 2,\n        sender: 'me',\n        text: 'brooh, been where??'\n      },\n      {\n        id: 3,\n        sender: 'other',\n        text: 'lundun bro'\n      },\n      {\n        id: 4,\n        sender: 'me',\n        text: 'welcome back, buddz'\n      }\n    ]\n  }\n\n  const [state, dispatch] = useReducer(StreamReducer, initialState)\n\n  const getStream = () => {\n    dispatch({\n      type: GET_STREAM\n    })\n  }\n\n  const selectStream = stream => {\n    dispatch({\n      type: CHOOSE_STREAM,\n      payload: stream\n    })\n  }\n\n  const sendMessage = formData => {\n    dispatch({\n      type: SEND_MESSAGE,\n      payload: formData\n    })\n  }\n\n  return (\n    <StreamContext.Provider \n      value={{\n        streams: state.streams,\n        messages: state.messages,\n        getStream,\n        sendMessage,\n        selectStream\n      }}\n    >\n      { props.children }\n    </StreamContext.Provider>\n  )\n}\n\nexport default StreamState"]},"metadata":{},"sourceType":"module"}