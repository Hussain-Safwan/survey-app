{"ast":null,"code":"import _slicedToArray from\"/home/mah-nigga/React/ChatApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import M from'materialize-css/dist/js/materialize.min.js';import StreamContext from'../../context/streams/StreamContext';import AuthContext from'../../context/auth/AuthContext';var ChatBox=function ChatBox(props){var messages=props.messages;var streamContext=useContext(StreamContext);var sendMessage=streamContext.sendMessage,current=streamContext.current,updateStream=streamContext.updateStream,currentMessage=streamContext.currentMessage;var authContext=useContext(AuthContext);var user=authContext.user;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),msg=_useState2[0],setMsg=_useState2[1];var onSend=function onSend(e){sendMessage({stream_id:current._id,text:msg,category:'text'});setMsg('');};var handleInput=function handleInput(e){setMsg(e.target.value);};var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var titleChange=function titleChange(e){setTitle(e.target.value);};useEffect(function(){if(current){setTitle(current.title);console.log(title);}},[current]);var onSubmit=function onSubmit(e){console.log(title);var formData={id:997,title:title};updateStream(formData);};var openVideoChat=function openVideoChat(e){sendMessage({stream_id:current._id,text:'Video chat started',category:'video'});setMsg('');};var copyLink=function copyLink(e){navigator.clipboard.writeText(current._id);M.toast({html:'Link copied'});};var joinVideoChat=function joinVideoChat(e){window.open(\"https://media.monerdaktar.com/\".concat(current._id));};if(!current){return/*#__PURE__*/React.createElement(\"p\",null,\"Select a stream\");}return/*#__PURE__*/React.createElement(\"div\",{className:\"chat-box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"above-messages\"},/*#__PURE__*/React.createElement(\"div\",{className:\"left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"image\"},/*#__PURE__*/React.createElement(\"img\",{src:\"https://robohash.org/\".concat(current._id,\"?set=set4\")})),/*#__PURE__*/React.createElement(\"div\",{className:\"title\"},/*#__PURE__*/React.createElement(\"a\",{className:\"modal-trigger\",href:\"#update-stream\"},/*#__PURE__*/React.createElement(\"h5\",null,title)))),/*#__PURE__*/React.createElement(\"div\",{className:\"right\",style:{display:'flex'}},/*#__PURE__*/React.createElement(\"i\",{className:\"small material-icons\",style:{cursor:'pointer',color:'gray'},onClick:openVideoChat},\"switch_video\"),/*#__PURE__*/React.createElement(\"i\",{className:\"small material-icons\",style:{cursor:'pointer',color:'gray'},onClick:copyLink},\"add_circle_outline\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"messages\"},currentMessage.map(function(message){return message.sender_id==user._id?message.category==='text'?/*#__PURE__*/React.createElement(\"p\",{className:\"Green\"},/*#__PURE__*/React.createElement(\"span\",{className:\"bubble\"},message.text)):/*#__PURE__*/React.createElement(\"p\",{className:\"Green\"},/*#__PURE__*/React.createElement(\"span\",{className:\"bubble\"},/*#__PURE__*/React.createElement(\"button\",{onClick:joinVideoChat},\"Join\"))):message.category==='text'?/*#__PURE__*/React.createElement(\"p\",{className:\"Gray\"},/*#__PURE__*/React.createElement(\"span\",{className:\"bubble\"},message.text)):/*#__PURE__*/React.createElement(\"p\",{className:\"Gray\"},/*#__PURE__*/React.createElement(\"span\",{className:\"bubble\"},/*#__PURE__*/React.createElement(\"button\",{onClick:joinVideoChat},\"Join\")));})),/*#__PURE__*/React.createElement(\"div\",{className:\"type-area\"},/*#__PURE__*/React.createElement(\"textarea\",{name:\"msg\",value:msg,onChange:handleInput}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",{class:\"material-icons right\",onClick:onSend},\"send\"))));};export default ChatBox;","map":{"version":3,"sources":["/home/mah-nigga/React/ChatApp/client/src/components/layouts/ChatBox.js"],"names":["React","useContext","useState","useEffect","M","StreamContext","AuthContext","ChatBox","props","messages","streamContext","sendMessage","current","updateStream","currentMessage","authContext","user","msg","setMsg","onSend","e","stream_id","_id","text","category","handleInput","target","value","title","setTitle","titleChange","console","log","onSubmit","formData","id","openVideoChat","copyLink","navigator","clipboard","writeText","toast","html","joinVideoChat","window","open","display","cursor","color","map","message","sender_id"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport M from 'materialize-css/dist/js/materialize.min.js'\n\nimport StreamContext from '../../context/streams/StreamContext'\nimport AuthContext from '../../context/auth/AuthContext'\n\nconst ChatBox = (props) => {\n  const { messages } = props\n\n  const streamContext = useContext(StreamContext)\n  const { sendMessage, current, updateStream, currentMessage } = streamContext\n  const authContext = useContext(AuthContext)\n  const { user } = authContext\n\n  const [msg, setMsg] = useState('')\n\n  const onSend = (e) => {\n    sendMessage({\n      stream_id: current._id,\n      text: msg,\n      category: 'text'\n    })\n    setMsg('')\n  }\n\n  const handleInput = (e) => {\n    setMsg(e.target.value)\n  }\n\n  const [title, setTitle] = useState('')\n  const titleChange = e => {\n    setTitle(e.target.value)\n  }\n\n  useEffect(() => {\n    if (current) {\n      setTitle(current.title)\n      console.log(title)\n    }\n  }, [current])\n\n  const onSubmit = e => {\n    console.log(title)\n    const formData = {\n      id: 997,\n      title\n    }\n    updateStream(formData)\n  }\n\n  const openVideoChat = e => {\n    sendMessage({\n      stream_id: current._id,\n      text: 'Video chat started',\n      category: 'video'\n    })\n    setMsg('')\n  }\n\n  const copyLink = e => {\n    navigator.clipboard.writeText( current._id )\n    M.toast({ html: 'Link copied' })\n  }\n\n  const joinVideoChat = e => {\n    window.open(`https://media.monerdaktar.com/${current._id}`)\n  }\n\n  if (!current) {\n    return (<p>Select a stream</p>)\n  }\n  return (\n    <div className='chat-box'>\n      <div className='above-messages'>\n        <div className='left'>\n          <div className='image'>\n            <img src={`https://robohash.org/${current._id}?set=set4`} />\n          </div>\n          <div className='title'>\n          <a className='modal-trigger' href='#update-stream'><h5>{title}</h5></a>  \n          </div>\n        </div>\n        <div className='right' style={{display: 'flex'}}>\n            <i className='small material-icons' style={{cursor: 'pointer', color: 'gray'}} onClick={openVideoChat}>switch_video</i>\n            <i className='small material-icons' style={{cursor: 'pointer', color: 'gray'}} onClick={copyLink}>add_circle_outline</i>\n        </div>\n      </div>\n      <div className='messages'>\n        {\n          currentMessage.map(message => ( message.sender_id == user._id ? (message.category === 'text' ? (\n            <p className='Green'><span className='bubble'>{ message.text }</span></p>\n          ) : (\n            <p className='Green'><span className='bubble'><button onClick={joinVideoChat}>Join</button></span></p>\n          ) ) : \n        (message.category === 'text' ? (\n          <p className='Gray'><span className='bubble'>{ message.text }</span></p>\n        ) : (\n          <p className='Gray'><span className='bubble'><button onClick={joinVideoChat}>Join</button></span></p>\n        ) )))\n        }\n      </div>\n      <div className='type-area'>\n        <textarea name='msg' value={msg} onChange={handleInput}></textarea>\n        <p><i class=\"material-icons right\" onClick={onSend}>send</i></p>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatBox\n"]},"metadata":{},"sourceType":"module"}