{"ast":null,"code":"import { CREATE_STREAM, JOIN_STREAM, GET_STREAM, SEND_MESSAGE, CHOOSE_STREAM, DELETE_STREAM, UPDATE_STREAM } from '../context/types';\n\nconst streamReducer = (state = {\n  current: null,\n  streams: [],\n  currentMessage: null,\n  loading: true\n}, action) => {\n  switch (action.type) {\n    case GET_STREAM:\n      return { ...state,\n        streams: action.payload,\n        current: action.payload[0],\n        currentMessage: action.payload[0].messages.reverse(),\n        loading: false\n      };\n\n    case CHOOSE_STREAM:\n      return { ...state,\n        current: action.payload,\n        currentMessage: action.payload.messages.reverse()\n      };\n\n    case SEND_MESSAGE:\n      const {\n        formData,\n        current\n      } = action.payload;\n      return { ...state,\n        current: current,\n        currentMessage: [...state.currentMessage, formData].reverse()\n      };\n\n    case 'RENDER_MESSAGES':\n      return { ...state,\n        current: action.payload,\n        currentMessage: action.payload.messages.reverse()\n      };\n\n    case 'SET_CURRENT':\n      return { ...state,\n        current: action.payload,\n        currentMessage: action.payload.messages\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        streams: [...state.streams, action.payload]\n      };\n\n    case DELETE_STREAM:\n      return { ...state,\n        streams: state.streams.filter(stream => stream.id !== action.payload.id),\n        current: state.streams[0]\n      };\n\n    case JOIN_STREAM:\n      return { ...state,\n        streams: [...state.streams, action.payload]\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default streamReducer;","map":{"version":3,"sources":["/home/mah-nigga/React/ChatApp/client/src/reducers/streams.js"],"names":["CREATE_STREAM","JOIN_STREAM","GET_STREAM","SEND_MESSAGE","CHOOSE_STREAM","DELETE_STREAM","UPDATE_STREAM","streamReducer","state","current","streams","currentMessage","loading","action","type","payload","messages","reverse","formData","filter","stream","id"],"mappings":"AAAA,SACEA,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,aAPF,QAQO,kBARP;;AAUA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG;AAC3BC,EAAAA,OAAO,EAAE,IADkB;AAE3BC,EAAAA,OAAO,EAAE,EAFkB;AAG3BC,EAAAA,cAAc,EAAE,IAHW;AAI3BC,EAAAA,OAAO,EAAE;AAJkB,CAAT,EAKnBC,MALmB,KAKR;AAER,UAAQA,MAAM,CAACC,IAAf;AACF,SAAKZ,UAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELE,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAFX;AAGLN,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAAP,CAAe,CAAf,CAHJ;AAILJ,QAAAA,cAAc,EAAEE,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBC,QAAlB,CAA2BC,OAA3B,EAJX;AAKLL,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELC,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFX;AAGLJ,QAAAA,cAAc,EAAEE,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBC,OAAxB;AAHX,OAAP;;AAKF,SAAKd,YAAL;AACE,YAAM;AAAEe,QAAAA,QAAF;AAAYT,QAAAA;AAAZ,UAAwBI,MAAM,CAACE,OAArC;AACA,aAAO,EACL,GAAGP,KADE;AAELC,QAAAA,OAAO,EAAEA,OAFJ;AAGLE,QAAAA,cAAc,EAAE,CAAC,GAAGH,KAAK,CAACG,cAAV,EAA0BO,QAA1B,EAAoCD,OAApC;AAHX,OAAP;;AAKF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGT,KADE;AAELC,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFX;AAGLJ,QAAAA,cAAc,EAAEE,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBC,OAAxB;AAHX,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGT,KADE;AAELC,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFX;AAGLJ,QAAAA,cAAc,EAAEE,MAAM,CAACE,OAAP,CAAeC;AAH1B,OAAP;;AAKF,SAAKhB,aAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELE,QAAAA,OAAO,EAAE,CAAC,GAAGF,KAAK,CAACE,OAAV,EAAmBG,MAAM,CAACE,OAA1B;AAFJ,OAAP;;AAIF,SAAKV,aAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELE,QAAAA,OAAO,EAAEF,KAAK,CAACE,OAAN,CAAcS,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcR,MAAM,CAACE,OAAP,CAAeM,EAA5D,CAFJ;AAGLZ,QAAAA,OAAO,EAAED,KAAK,CAACE,OAAN,CAAc,CAAd;AAHJ,OAAP;;AAKF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELE,QAAAA,OAAO,EAAE,CAAC,GAAGF,KAAK,CAACE,OAAV,EAAmBG,MAAM,CAACE,OAA1B;AAFJ,OAAP;;AAIF;AACE,aAAO,EACL,GAAGP;AADE,OAAP;AAnDA;AAuDD,CA9DL;;AAgEE,eAAeD,aAAf","sourcesContent":["import {\n  CREATE_STREAM,\n  JOIN_STREAM,\n  GET_STREAM,\n  SEND_MESSAGE,\n  CHOOSE_STREAM,\n  DELETE_STREAM,\n  UPDATE_STREAM\n} from '../context/types'\n\nconst streamReducer = (state = {\n    current: null,\n    streams: [],\n    currentMessage: null,\n    loading: true\n}, action) => {\n\n      switch (action.type) {\n    case GET_STREAM: \n      return {\n        ...state,\n        streams: action.payload,\n        current: action.payload[0],\n        currentMessage: action.payload[0].messages.reverse(),\n        loading: false\n      }\n    case CHOOSE_STREAM: \n      return {\n        ...state,\n        current: action.payload,\n        currentMessage: action.payload.messages.reverse()\n      }\n    case SEND_MESSAGE: \n      const { formData, current } = action.payload\n      return {\n        ...state,\n        current: current,\n        currentMessage: [...state.currentMessage, formData].reverse()\n      }\n    case 'RENDER_MESSAGES':\n      return {\n        ...state,\n        current: action.payload,\n        currentMessage: action.payload.messages.reverse()\n      }\n    case 'SET_CURRENT': \n      return {\n        ...state,\n        current: action.payload,\n        currentMessage: action.payload.messages\n      }\n    case CREATE_STREAM: \n      return {\n        ...state,\n        streams: [...state.streams, action.payload]\n      }\n    case DELETE_STREAM:\n      return {\n        ...state,\n        streams: state.streams.filter(stream => stream.id !== action.payload.id),\n        current: state.streams[0]\n      }\n    case JOIN_STREAM: \n      return {\n        ...state,\n        streams: [...state.streams, action.payload]\n      }\n    default: \n      return {\n        ...state\n      }\n      }\n    }\n\n  export default streamReducer"]},"metadata":{},"sourceType":"module"}