{"ast":null,"code":"import _slicedToArray from\"/home/mah-nigga/React/ChatApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import StreamItems from'./StreamItems';import StreamContext from'../../context/streams/StreamContext';var flex={display:'flex',justifyContent:'space-between'};var icon={color:'gray',marginTop:'10px',cursor:'pointer'};var StreamList=function StreamList(props){var streamContext=useContext(StreamContext);var createStream=streamContext.createStream,getStream=streamContext.getStream,streams=streamContext.streams,loading=streamContext.loading,currentMessage=streamContext.currentMessage;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var titleChange=function titleChange(e){setTitle(e.target.value);};useEffect(function(){getStream();},[]);var onSubmit=function onSubmit(e){console.log(title);var formData={id:997,title:title};createStream(formData);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",{class:\"collection with-header\"},/*#__PURE__*/React.createElement(\"li\",{class:\"collection-header\"},/*#__PURE__*/React.createElement(\"div\",{style:flex},/*#__PURE__*/React.createElement(\"h5\",null,\"Streams\"),\" \",/*#__PURE__*/React.createElement(\"a\",{className:\"modal-trigger\",href:\"#create-stream\"},/*#__PURE__*/React.createElement(\"i\",{className:\"small material-icons\",style:icon},\"add\")),\" \")),!streams?/*#__PURE__*/React.createElement(\"p\",null,\"Loading...\"):streams.map(function(stream){return/*#__PURE__*/React.createElement(StreamItems,{stream:stream});})));};export default StreamList;","map":{"version":3,"sources":["/home/mah-nigga/React/ChatApp/client/src/components/layouts/StreamList.js"],"names":["React","useState","useContext","useEffect","StreamItems","StreamContext","flex","display","justifyContent","icon","color","marginTop","cursor","StreamList","props","streamContext","createStream","getStream","streams","loading","currentMessage","title","setTitle","titleChange","e","target","value","onSubmit","console","log","formData","id","map","stream"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,qCAA1B,CAEA,GAAMC,CAAAA,IAAI,CAAG,CACXC,OAAO,CAAE,MADE,CAEXC,cAAc,CAAE,eAFL,CAAb,CAIA,GAAMC,CAAAA,IAAI,CAAG,CAACC,KAAK,CAAE,MAAR,CAAgBC,SAAS,CAAE,MAA3B,CAAmCC,MAAM,CAAE,SAA3C,CAAb,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,aAAa,CAAGb,UAAU,CAACG,aAAD,CAAhC,CAD4B,GAEpBW,CAAAA,YAFoB,CAE0CD,aAF1C,CAEpBC,YAFoB,CAENC,SAFM,CAE0CF,aAF1C,CAENE,SAFM,CAEKC,OAFL,CAE0CH,aAF1C,CAEKG,OAFL,CAEcC,OAFd,CAE0CJ,aAF1C,CAEcI,OAFd,CAEuBC,cAFvB,CAE0CL,aAF1C,CAEuBK,cAFvB,eAIFnB,QAAQ,CAAC,EAAD,CAJN,wCAIrBoB,KAJqB,eAIdC,QAJc,eAK5B,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,CAAC,CAAI,CACvBF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACD,CAFD,CAIAvB,SAAS,CAAC,UAAM,CACdc,SAAS,GACV,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAH,CAAC,CAAI,CACpBI,OAAO,CAACC,GAAR,CAAYR,KAAZ,EACA,GAAMS,CAAAA,QAAQ,CAAG,CACfC,EAAE,CAAE,GADW,CAEfV,KAAK,CAALA,KAFe,CAAjB,CAIAL,YAAY,CAACc,QAAD,CAAZ,CACD,CAPD,CAQA,mBACE,4CACE,0BAAI,KAAK,CAAC,wBAAV,eACE,0BAAI,KAAK,CAAC,mBAAV,eAA8B,2BAAK,KAAK,CAAExB,IAAZ,eAAkB,wCAAlB,kBAAmC,yBAAG,SAAS,CAAC,eAAb,CAA6B,IAAI,CAAC,gBAAlC,eAAmD,yBAAG,SAAS,CAAC,sBAAb,CAAoC,KAAK,CAAEG,IAA3C,QAAnD,CAAnC,KAA9B,CADF,CAGM,CAACS,OAAD,cAAW,0CAAX,CAA+BA,OAAO,CAACc,GAAR,CAAY,SAAAC,MAAM,qBAAK,oBAAC,WAAD,EAAa,MAAM,CAAEA,MAArB,EAAL,EAAlB,CAHrC,CADF,CADF,CAUD,CA/BD,CAiCA,cAAepB,CAAAA,UAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport StreamItems from './StreamItems'\nimport StreamContext from '../../context/streams/StreamContext'\n\nconst flex = {\n  display: 'flex', \n  justifyContent: 'space-between'\n}\nconst icon = {color: 'gray', marginTop: '10px', cursor: 'pointer'}\n\nconst StreamList = (props) => {\n  const streamContext = useContext(StreamContext)\n  const { createStream, getStream, streams, loading, currentMessage } = streamContext\n\n  const [title, setTitle] = useState('')\n  const titleChange = e => {\n    setTitle(e.target.value)\n  }\n\n  useEffect(() => {\n    getStream()\n  }, [])\n\n  const onSubmit = e => {\n    console.log(title)\n    const formData = {\n      id: 997,\n      title\n    }\n    createStream(formData)\n  }\n  return (\n    <div>\n      <ul class=\"collection with-header\">\n        <li class=\"collection-header\"><div style={flex}><h5>Streams</h5> <a className='modal-trigger' href='#create-stream'><i className='small material-icons' style={icon}>add</i></a> </div></li>\n          {\n            !streams ? <p>Loading...</p> : streams.map(stream => (<StreamItems stream={stream} />))\n          }\n      </ul> \n  </div>\n  )\n}\n\nexport default StreamList"]},"metadata":{},"sourceType":"module"}