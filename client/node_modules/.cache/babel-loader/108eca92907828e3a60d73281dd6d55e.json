{"ast":null,"code":"var _jsxFileName = \"/home/mah-nigga/React/ChatApp/client/src/context/streams/StreamState.js\";\nimport React, { useReducer, useContext } from 'react';\nimport StreamReducer from './StreamReducer';\nimport StreamContext from './StreamContext';\nimport setAuthToken from '../../utils/setAuthToken';\nimport AuthContext from '../auth/AuthContext';\nimport axios from 'axios';\nimport { CREATE_STREAM, JOIN_STREAM, GET_STREAM, SEND_MESSAGE, CHOOSE_STREAM, DELETE_STREAM, UPDATE_STREAM } from '../types';\n\nconst StreamState = props => {\n  const initialState = {\n    current: null,\n    streams: [],\n    messages: [{\n      id: 1,\n      sender: 'other',\n      text: 'hey there buddz'\n    }, {\n      id: 2,\n      sender: 'me',\n      text: 'brooh, been where??'\n    }, {\n      id: 3,\n      sender: 'other',\n      text: 'lundun bro'\n    }, {\n      id: 4,\n      sender: 'me',\n      text: 'welcome back, buddz'\n    }]\n  };\n  const [state, dispatch] = useReducer(StreamReducer, initialState);\n  const authContext = useContext(AuthContext);\n  const {\n    user\n  } = authContext;\n\n  const getStream = async () => {\n    if (user) {\n      const res = await axios.get(`http://localhost:5000/streams/${user._id}`);\n      dispatch({\n        type: GET_STREAM,\n        payload: res.data\n      });\n    }\n  };\n\n  const selectStream = stream => {\n    dispatch({\n      type: CHOOSE_STREAM,\n      payload: stream\n    });\n  };\n\n  const sendMessage = formData => {\n    if (user) {\n      formData.sender_id = user._id;\n      formData.sender_name = user.name;\n      dispatch({\n        type: SEND_MESSAGE,\n        payload: formData\n      });\n    }\n  };\n\n  const createStream = async title => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    if (user) {\n      const formData = {\n        title: title.title,\n        owner_id: user._id,\n        owner_name: user.name\n      };\n      const res = await axios.post('http://localhost:5000/streams/create', formData, config);\n      dispatch({\n        type: CREATE_STREAM,\n        payload: formData\n      });\n    }\n  };\n\n  const deleteStream = formData => {\n    dispatch({\n      type: DELETE_STREAM,\n      payload: formData\n    });\n  };\n\n  const updateStream = formData => {\n    dispatch({\n      type: UPDATE_STREAM,\n      payload: formData\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StreamContext.Provider, {\n    value: {\n      streams: state.streams,\n      messages: state.messages,\n      current: state.current,\n      getStream,\n      sendMessage,\n      selectStream,\n      createStream,\n      deleteStream,\n      updateStream\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default StreamState;","map":{"version":3,"sources":["/home/mah-nigga/React/ChatApp/client/src/context/streams/StreamState.js"],"names":["React","useReducer","useContext","StreamReducer","StreamContext","setAuthToken","AuthContext","axios","CREATE_STREAM","JOIN_STREAM","GET_STREAM","SEND_MESSAGE","CHOOSE_STREAM","DELETE_STREAM","UPDATE_STREAM","StreamState","props","initialState","current","streams","messages","id","sender","text","state","dispatch","authContext","user","getStream","res","get","_id","type","payload","data","selectStream","stream","sendMessage","formData","sender_id","sender_name","name","createStream","title","config","headers","owner_id","owner_name","post","deleteStream","updateStream","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,aAPF,QAQO,UARP;;AAUA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,IADU;AAEnBC,IAAAA,OAAO,EAAE,EAFU;AAGnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,MAAM,EAAE,OAFV;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADQ,EAMR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,MAAM,EAAE,IAFV;AAGEC,MAAAA,IAAI,EAAE;AAHR,KANQ,EAWR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,MAAM,EAAE,OAFV;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAXQ,EAgBR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,MAAM,EAAE,IAFV;AAGEC,MAAAA,IAAI,EAAE;AAHR,KAhBQ;AAHS,GAArB;AA2BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,UAAU,CAACE,aAAD,EAAgBc,YAAhB,CAApC;AAEA,QAAMS,WAAW,GAAGxB,UAAU,CAACI,WAAD,CAA9B;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAWD,WAAjB;;AAEA,QAAME,SAAS,GAAG,YAAY;AAC5B,QAAID,IAAJ,EAAU;AACR,YAAME,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAW,iCAAgCH,IAAI,CAACI,GAAI,EAApD,CAAlB;AACAN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEtB,UADC;AAEPuB,QAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,OAAD,CAAR;AAID;AACF,GARD;;AAUA,QAAMC,YAAY,GAAGC,MAAM,IAAI;AAC7BX,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEpB,aADC;AAEPqB,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,WAAW,GAAGC,QAAQ,IAAI;AAC9B,QAAIX,IAAJ,EAAU;AACRW,MAAAA,QAAQ,CAACC,SAAT,GAAqBZ,IAAI,CAACI,GAA1B;AACAO,MAAAA,QAAQ,CAACE,WAAT,GAAuBb,IAAI,CAACc,IAA5B;AACAhB,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAErB,YADC;AAEPsB,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAID;AACF,GATD;;AAWA,QAAMI,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAIlB,IAAJ,EAAU;AACR,YAAMW,QAAQ,GAAG;AACfK,QAAAA,KAAK,EAAEA,KAAK,CAACA,KADE;AAEfG,QAAAA,QAAQ,EAAEnB,IAAI,CAACI,GAFA;AAGfgB,QAAAA,UAAU,EAAEpB,IAAI,CAACc;AAHF,OAAjB;AAKA,YAAMZ,GAAG,GAAG,MAAMtB,KAAK,CAACyC,IAAN,CAAW,sCAAX,EAAmDV,QAAnD,EAA6DM,MAA7D,CAAlB;AACAnB,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAExB,aADC;AAEPyB,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAID;AACF,GAlBD;;AAoBA,QAAMW,YAAY,GAAGX,QAAQ,IAAI;AAC/Bb,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEnB,aADC;AAEPoB,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMY,YAAY,GAAGZ,QAAQ,IAAI;AAC/Bb,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAElB,aADC;AAEPmB,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLnB,MAAAA,OAAO,EAAEK,KAAK,CAACL,OADV;AAELC,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAFX;AAGLF,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAHV;AAILU,MAAAA,SAJK;AAKLS,MAAAA,WALK;AAMLF,MAAAA,YANK;AAOLO,MAAAA,YAPK;AAQLO,MAAAA,YARK;AASLC,MAAAA;AATK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaIlC,KAAK,CAACmC,QAbV,CADF;AAiBD,CAhHD;;AAkHA,eAAepC,WAAf","sourcesContent":["import React, { useReducer, useContext } from 'react'\nimport StreamReducer from './StreamReducer'\nimport StreamContext from './StreamContext'\nimport setAuthToken from '../../utils/setAuthToken'\nimport AuthContext from '../auth/AuthContext'\n\nimport axios from 'axios'\n\nimport {\n  CREATE_STREAM,\n  JOIN_STREAM,\n  GET_STREAM,\n  SEND_MESSAGE,\n  CHOOSE_STREAM,\n  DELETE_STREAM,\n  UPDATE_STREAM\n} from '../types'\n\nconst StreamState = props => {\n  const initialState = {\n    current: null,\n    streams: [],\n    messages: [\n      {\n        id: 1,\n        sender: 'other',\n        text: 'hey there buddz'\n      },\n      {\n        id: 2,\n        sender: 'me',\n        text: 'brooh, been where??'\n      },\n      {\n        id: 3,\n        sender: 'other',\n        text: 'lundun bro'\n      },\n      {\n        id: 4,\n        sender: 'me',\n        text: 'welcome back, buddz'\n      }\n    ]\n  }\n\n  const [state, dispatch] = useReducer(StreamReducer, initialState)\n\n  const authContext = useContext(AuthContext)\n  const { user } = authContext\n\n  const getStream = async () => {\n    if (user) {\n      const res = await axios.get(`http://localhost:5000/streams/${user._id}`)\n      dispatch({\n        type: GET_STREAM,\n        payload: res.data\n      })\n    }\n  }\n\n  const selectStream = stream => {\n    dispatch({\n      type: CHOOSE_STREAM,\n      payload: stream\n    })\n  }\n\n  const sendMessage = formData => {\n    if (user) {\n      formData.sender_id = user._id\n      formData.sender_name = user.name\n      dispatch({\n        type: SEND_MESSAGE,\n        payload: formData\n      })\n    }\n  }\n\n  const createStream = async title => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    if (user) {\n      const formData = {\n        title: title.title,\n        owner_id: user._id,\n        owner_name: user.name\n      }\n      const res = await axios.post('http://localhost:5000/streams/create', formData, config)\n      dispatch({\n        type: CREATE_STREAM,\n        payload: formData\n      })\n    }\n  }\n\n  const deleteStream = formData => {\n    dispatch({\n      type: DELETE_STREAM,\n      payload: formData\n    })\n  }\n\n  const updateStream = formData => {\n    dispatch({\n      type: UPDATE_STREAM,\n      payload: formData\n    })\n  }\n\n  return (\n    <StreamContext.Provider \n      value={{\n        streams: state.streams,\n        messages: state.messages,\n        current: state.current,\n        getStream,\n        sendMessage,\n        selectStream,\n        createStream,\n        deleteStream,\n        updateStream\n      }}\n    >\n      { props.children }\n    </StreamContext.Provider>\n  )\n}\n\nexport default StreamState"]},"metadata":{},"sourceType":"module"}